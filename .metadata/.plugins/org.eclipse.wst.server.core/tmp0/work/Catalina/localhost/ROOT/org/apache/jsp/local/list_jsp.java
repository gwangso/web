/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-26 23:39:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.local;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("	<div class=\"col\">\r\n");
      out.write("		<h1 class=\"mb-5\">지역검색</h1>\r\n");
      out.write("		<div class=\"row mb-3 justify-content-end\">\r\n");
      out.write("			<form name=\"frm_search\" class=\"col-md-4\">\r\n");
      out.write("				<div class=\"input-group\">\r\n");
      out.write("					<select name=\"city\" class=\"form-select me-2\">\r\n");
      out.write("						<option>서울</option>\r\n");
      out.write("						<option selected>인천</option>\r\n");
      out.write("						<option>경기</option>\r\n");
      out.write("						<option>강원</option>\r\n");
      out.write("						<option>충북</option>\r\n");
      out.write("						<option>충남</option>\r\n");
      out.write("						<option>전북</option>\r\n");
      out.write("						<option>전남</option>\r\n");
      out.write("						<option>경북</option>\r\n");
      out.write("						<option>경남</option>\r\n");
      out.write("						<option>부산</option>\r\n");
      out.write("					</select>\r\n");
      out.write("					<input name=\"query\" class=\"form-control\" value=\"버거킹\" />\r\n");
      out.write("					<button class=\"btn btn-primary\">검색</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"div_local\"></div>\r\n");
      out.write("		<div class=\"text-center\">\r\n");
      out.write("			<button id=\"prev\" class=\"btn btn-secondary px-3\">이전</button>\r\n");
      out.write("			<span id=\"nowpage\" class=\"mx-3\">1/100</span>\r\n");
      out.write("			<button id=\"next\" class=\"btn btn-secondary px-3\">다음</button>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"map\" style=\"width:100%;height:100%;\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 지역검색목록 템플릿 -->\r\n");
      out.write("<script id=\"temp_local\" type=\"text/x-handlebars-template\">\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	<table class=\"table table-striped table-dark\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"checkbox\" class=\"me-3\" id=\"all\">\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>id</td>\r\n");
      out.write("			<td>이름</td>\r\n");
      out.write("			<td>주소</td>\r\n");
      out.write("			<td>전화번호</td>\r\n");
      out.write("			<td></td>\r\n");
      out.write("		</tr>			\r\n");
      out.write("		{{#each documents}}\r\n");
      out.write("		<tr class=\"local\" local=\"{{toString @this}}\">\r\n");
      out.write("			<td><input type=\"checkbox\" class=\"chk\"></td>\r\n");
      out.write("			<td>{{id}}</td>\r\n");
      out.write("			<td class=\"place\">{{place_name}}</td>\r\n");
      out.write("			<td>{{address_name}}</td>\r\n");
      out.write("			<td class=\"phone\">{{phone}}</td>\r\n");
      out.write("			<td><button class=\"btn btn-success\" idx={{@index}} x=\"{{x}}\" y=\"{{y}}\">위치</button></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{/each}}\r\n");
      out.write("	</table>\r\n");
      out.write("	<td><button id=\"btn_save\" class=\"btn btn-primary btn-sm\">선택저장</button></td>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- handlebars 함수 -->\r\n");
      out.write("<script>\n");
      out.write("	Handlebars.registerHelper(\"toString\", function(local){\r\n");
      out.write("		return JSON.stringify(local); //Handlebar에서 local을 받아 string으로 바꿔준다\r\n");
      out.write("	});\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ajax -->\r\n");
      out.write("<script>\r\n");
      out.write("	let now_page = 1;\r\n");
      out.write("\r\n");
      out.write("	$(\"#prev\").on(\"click\", function() {\r\n");
      out.write("		now_page--;\r\n");
      out.write("		getList();\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	$(\"#next\").on(\"click\", function() {\r\n");
      out.write("		now_page++;\r\n");
      out.write("		getList();\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	$(frm_search).on(\"submit\", function(event) {\r\n");
      out.write("		event.preventDefault();\r\n");
      out.write("		now_page = 1;\r\n");
      out.write("		getList();\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//전체 체크박스를 클릭했을때\r\n");
      out.write("	$(\"#div_local\").on(\"click\", \"#all\", function(){\r\n");
      out.write("		if($(this).is(\":checked\")){\r\n");
      out.write("			$(\"#div_local .local .chk\").prop(\"checked\", true)\r\n");
      out.write("		}else {\r\n");
      out.write("			$(\"#div_local .local .chk\").prop(\"checked\", false)\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//각 행에 체크박스를 클릭했을때\r\n");
      out.write("	$(\"#div_local\").on(\"click\", \".chk\", function(){\r\n");
      out.write("		//전체체크박스 개수\r\n");
      out.write("		let total=$(\"#div_local .chk\").length;\r\n");
      out.write("		let chk=$(\"#div_local .chk:checked\").length;\r\n");
      out.write("		if(total==chk){\r\n");
      out.write("			$(\"#div_local #all\").prop(\"checked\",true);\r\n");
      out.write("		}else{\r\n");
      out.write("			$(\"#div_local #all\").prop(\"checked\",false);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//선택 저장버튼을 클릭했을때\r\n");
      out.write("	$(\"#div_local\").on(\"click\", \"#btn_save\", function(){\r\n");
      out.write("		let chk=$(\"#div_local .chk:checked\").length;\r\n");
      out.write("		if(chk==0){\r\n");
      out.write("			alert(\"저장할 항목을 선택하세요!\")\r\n");
      out.write("		}else {\r\n");
      out.write("			if(!confirm(chk+\"개 항목을 저장하실레요?\")) return;\r\n");
      out.write("			$(\"#div_local .chk:checked\").each(function(){\r\n");
      out.write("				let row =$(this).parent().parent();\r\n");
      out.write("				let data = JSON.parse(row.attr(\"local\"));\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type:\"post\",\r\n");
      out.write("					url:\"/local/insert\",\r\n");
      out.write("					data: data,\r\n");
      out.write("					success:function(){\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			});\r\n");
      out.write("			alert(\"저장되었습니다.\");\r\n");
      out.write("			$(\"#div_local .chk\").prop(\"checked\",false);\r\n");
      out.write("			$(\"#div_local #all\").prop(\"checked\",false)\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	//위치버튼을 클릭\r\n");
      out.write("	$(\"#div_local\").on(\"click\", \".btn-success\", function() {\r\n");
      out.write("		$(\"#map\").show();\r\n");
      out.write("		let x = $(this).attr(\"x\"); //경도\r\n");
      out.write("		let y = $(this).attr(\"y\"); //위도\r\n");
      out.write("		var container = document.getElementById('map');\r\n");
      out.write("		var options = {\r\n");
      out.write("			center : new kakao.maps.LatLng(y, x),\r\n");
      out.write("			level : 3\r\n");
      out.write("		};\r\n");
      out.write("		var map = new kakao.maps.Map(container, options);\r\n");
      out.write("		// 마커가 표시될 위치입니다 \r\n");
      out.write("		var markerPosition = new kakao.maps.LatLng(y, x);\r\n");
      out.write("\r\n");
      out.write("		// 마커를 생성합니다\r\n");
      out.write("		var marker = new kakao.maps.Marker({\r\n");
      out.write("			position : markerPosition\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("		marker.setMap(map);\r\n");
      out.write("		\r\n");
      out.write("		let row = $(this).parent().parent();\r\n");
      out.write("		let place = row.find(\".place\").text();\r\n");
      out.write("		let phone = row.find(\".phone\").text();\r\n");
      out.write("		\r\n");
      out.write("		var str =\"<div style='padding:5px;font-size:12px;'>\";\r\n");
      out.write("        str += place + \"<br>\" + phone;\r\n");
      out.write("        str +=\"</div>\";\r\n");
      out.write("        var info=new kakao.maps.InfoWindow({ content:str });\r\n");
      out.write("\r\n");
      out.write("        kakao.maps.event.addListener(marker, \"mouseover\", function(){ \r\n");
      out.write("        	info.open(map, marker); \r\n");
      out.write("        });\r\n");
      out.write("        kakao.maps.event.addListener(marker, \"mouseout\", function(){\r\n");
      out.write("        	info.close(map, marker); \r\n");
      out.write("        });\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	getList();\r\n");
      out.write("	function getList() {\r\n");
      out.write("		let query = $(frm_search.city).val() + \" \" + $(frm_search.query).val();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"get\",\r\n");
      out.write("			url : \"https://dapi.kakao.com/v2/local/search/keyword.json\",\r\n");
      out.write("			dataType : \"json\",\r\n");
      out.write("			data : {\r\n");
      out.write("				query : query,\r\n");
      out.write("				size : 5,\r\n");
      out.write("				page : now_page\r\n");
      out.write("			},\r\n");
      out.write("			headers : {\r\n");
      out.write("				\"Authorization\" : \"KakaoAK 19f87e364dd00588802f6312b3bffecb\"\r\n");
      out.write("			},\r\n");
      out.write("			success : function(data) {\r\n");
      out.write("				const com_temp_local = Handlebars.compile($(\"#temp_local\")\r\n");
      out.write("						.html());\r\n");
      out.write("				const html_local = com_temp_local(data);\r\n");
      out.write("				$(\"#div_local\").html(html_local);\r\n");
      out.write("\r\n");
      out.write("				let last_page = Math.ceil(data.meta.pageable_count / 5);\r\n");
      out.write("				$(\"#nowpage\").html(now_page + \"/\" + last_page);\r\n");
      out.write("\r\n");
      out.write("				if (now_page == 1)\r\n");
      out.write("					$(\"#prev\").attr(\"disabled\", true);\r\n");
      out.write("				else\r\n");
      out.write("					$(\"#prev\").attr(\"disabled\", false);\r\n");
      out.write("\r\n");
      out.write("				if (now_page == last_page)\r\n");
      out.write("					$(\"#next\").attr(\"disabled\", true);\r\n");
      out.write("				else\r\n");
      out.write("					$(\"#next\").attr(\"disabled\", false);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
