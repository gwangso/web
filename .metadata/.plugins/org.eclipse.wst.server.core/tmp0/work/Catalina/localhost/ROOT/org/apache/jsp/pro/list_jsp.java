/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-28 08:40:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pro;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "insert.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row my-3\">\r\n");
      out.write("	<div class=\"col\">\r\n");
      out.write("		<h1 class=\"mb-2\">상품목록</h1>\r\n");
      out.write("		<div class=\"row justify-content-end\" >\r\n");
      out.write("			<div class=\"col-1 col-md-6 col-xl-8\">\r\n");
      out.write("				<span id=\"total\" class=\"p-3 align-bottom\">20건</span>				\r\n");
      out.write("			</div>\r\n");
      out.write("			<form name=\"frm_list\" class=\"col-11 col-md-6 col-xl-4\">\r\n");
      out.write("				<div class=\"input-group mb-3\">\r\n");
      out.write("					<input name=\"query\" class=\"form-control\" placeholder=\"검색어\">\r\n");
      out.write("					<button class=\"btn btn-success\">검색</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"div_list\"></div>\r\n");
      out.write("		<div id=\"btn_group\" class=\"text-center\">\r\n");
      out.write("			<button id=\"prev\" class=\"btn btn-secondary\">이전</button>\r\n");
      out.write("			<span id=\"now_page\">1</span>\r\n");
      out.write("			<button id=\"next\" class=\"btn btn-secondary\">다음</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 템플릿 -->\r\n");
      out.write("<script id=\"temp_list\" type=\"text/x-handelbars-template\">\n");
      out.write("	<table class=\"table\">\r\n");
      out.write("		<tr class=\"table-dark\">\r\n");
      out.write("			<td>상품코드</td>\r\n");
      out.write("			<td>상품이름</td>\r\n");
      out.write("			<td>상품가격</td>\r\n");
      out.write("			<td>상품등록일</td>\r\n");
      out.write("			<td>삭제</td>\r\n");
      out.write("			<td>수정</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{#each items}}\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td class=\"code\">{{pcode}}</td>\r\n");
      out.write("			<td><input class=\"name\" value=\"{{pname}}\"></td>\r\n");
      out.write("			<td><input class=\"price\" value=\"{{pprice}}\"><span class=\"fprice\">{{fpprice}}</span></td>\r\n");
      out.write("			<td>{{fpdate}}</td>\r\n");
      out.write("			<td><button class=\"btn btn-danger btn-sm\" dcode=\"{{pcode}}\">삭제</button></td>\r\n");
      out.write("			<td><button class=\"btn btn-warning btn-sm\" ucode=\"{{pcode}}\">수정</button></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{/each}}\r\n");
      out.write("	</table>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\n");
      out.write("	$(\"#div_list\").on(\"click\",\".btn-danger\", function(){\r\n");
      out.write("		let dcode=$(this).attr(\"dcode\");\r\n");
      out.write("		if(confirm(dcode + \"번 상품을 삭제하시겠습니까?\")){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				url:\"/pro/delete\",\r\n");
      out.write("				data:{pcode:dcode},\r\n");
      out.write("				success:function(){\r\n");
      out.write("					alert(\"삭제가 완료되었습니다.\")\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}else {\r\n");
      out.write("			alert(\"삭제가 취소되었습니다.\")\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	$(\"#div_list\").on(\"click\",\".btn-warning\", function(){\r\n");
      out.write("		let urow =$(this).parent().parent();\r\n");
      out.write("		let ucode=urow.find(\".code\").text();\r\n");
      out.write("		let uname=urow.find(\".name\").val();\r\n");
      out.write("		let uprice=urow.find(\".price\").val();\r\n");
      out.write("		if(confirm(\"상품코드:\" + ucode + \" 상품이름:\" +uname + \" 상품가격:\" +uprice + \"수정하실래요?\")){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				url:\"/pro/update\",\r\n");
      out.write("				data:{pcode:ucode, pname:uname, pprice:uprice},\r\n");
      out.write("				success:function(){\r\n");
      out.write("					alert(\"수정이 완료되었습니다.\");\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}else{\r\n");
      out.write("			alert(\"수정이 취소되었습니다.\");\r\n");
      out.write("			getList();\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	$(\"#div_list\").on(\"keydown\",\".price\", function(){\r\n");
      out.write("		const price=$(this).val();\r\n");
      out.write("		const td=$(this).parent();\r\n");
      out.write("		if(price.replace(/^[0-9]/g, '')){\r\n");
      out.write("			td.find(\".fprice\").html(price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \"원\")\r\n");
      out.write("		}else {\r\n");
      out.write("			td.find(\".fprice\").html('<span style=\"color: red;\">숫자로입력해주세요</span>');\r\n");
      out.write("		}\r\n");
      out.write("	})\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 함수 -->\r\n");
      out.write("<script>\r\n");
      out.write("	let query = \"\";\n");
      out.write("	let nowPage = 1;\r\n");
      out.write("	\r\n");
      out.write("	getList();\r\n");
      out.write("	function getList(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"/pro/list.json\", //같은서버라 http://를 생략가능\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			data:{page : nowPage, query:query},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				if(data.total==0) {\r\n");
      out.write("					$(\"#div_list\").html('<h1 class=\"text-center my-5\">상품이없습니다.</h1>');\r\n");
      out.write("					$(\"#btn_group\").hide();\r\n");
      out.write("				}else {\r\n");
      out.write("					const com_temp_list = Handlebars.compile($(\"#temp_list\").html());\r\n");
      out.write("					const html_list = com_temp_list(data);\r\n");
      out.write("					$(\"#div_list\").html(html_list);\r\n");
      out.write("					\r\n");
      out.write("					$(\"#btn_group\").show();\r\n");
      out.write("					\r\n");
      out.write("					let lastPage = Math.ceil(data.total/5);\r\n");
      out.write("					\r\n");
      out.write("					$(\"#now_page\").html(nowPage + \"/\" + lastPage);\r\n");
      out.write("					\r\n");
      out.write("					if(nowPage==1) $(\"#prev\").attr(\"disabled\", true);\r\n");
      out.write("					else $(\"#prev\").attr(\"disabled\", false)\r\n");
      out.write("					\r\n");
      out.write("					if(nowPage==lastPage) $(\"#next\").attr(\"disabled\", true);\r\n");
      out.write("					else $(\"#next\").attr(\"disabled\", false)\r\n");
      out.write("					\r\n");
      out.write("					$(\"#total\").html(data.total+\"건\");					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(\"#next\").on(\"click\",function(){\r\n");
      out.write("		nowPage++;\r\n");
      out.write("		getList();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#prev\").on(\"click\",function(){\r\n");
      out.write("		nowPage--;\r\n");
      out.write("		getList();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(frm_list).on(\"submit\", function(e){\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		page = 1;\r\n");
      out.write("		query = $(frm_list.query).val();\r\n");
      out.write("		getList();\r\n");
      out.write("	})\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
